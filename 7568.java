/*

백준 7568 - 덩치 문제 (브루트포스 알고리즘)

두 사람 A 와 B의 덩치가 각각 (x, y), (p, q)라고 할 때 x > p 그리고 y > q 이라면 우리는 A의 덩치가 B의 덩치보다 "더 크다"고 말한다.

예를 들어 어떤 A, B 두 사람의 덩치가 각각 (56, 177), (45, 165) 라고 한다면 A의 덩치가 B보다 큰 셈이 된다. 

그런데 서로 다른 덩치끼리 크기를 정할 수 없는 경우도 있다. 

예를 들어 두 사람 C와 D의 덩치가 각각 (45, 181), (55, 173)이라면 몸무게는 D가 C보다 더 무겁고, 키는 C가 더 크므로, "덩치"로만 볼 때 C와 D는 누구도 상대방보다 더 크다고 말할 수 없다.


첫 줄에는 전체 사람의 수 N이 주어진다. 그리고 이어지는 N개의 줄에는 각 사람의 몸무게와 키를 나타내는 양의 정수 x와 y가 하나의 공백을 두고 각각 나타난다.

입력에 나열된 사람의 덩치 등수를 구해서 그 순서대로 첫 줄에 출력해야 한다. 단, 각 덩치 등수는 공백문자로 분리되어야 한다.


문제 접근 방식

1) 2차원 배열을 생성한 후 몸무게와 키를 배열에 넣고, 첫번째로 들어온 값을 rank 1로 우선 매김

2) 이후 다음 들어오는 값과 몸무게, 키를 비교하여 둘다 크다면, rank 값을 플러스 해줌.

3) 각 이차원 배열에 들어오는 값을 모두 비교하여 최종적으로 rank를 출력한다.

*/


import java.util.*;

public class Main {
    
    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        
        int N = sc.nextInt();                     // 사람의 수 N
        
        int[][] person = new int[N][2];           // 몸무게와 키를 넣기 위한 2차원 배열
        
        for(int i=0; i<N; i++) {
            person[i][0] = sc.nextInt();          // 몸무게
            person[i][1] = sc.nextInt();          // 키
        }
        
        for(int i=0; i<N; i++) {
            int rank = 1;                         // 우선 rank를 1로 선언함
            for(int j=0; j<N; j++) {
                if(i == j) continue;              // 몸무게와 키가 같은 사람은 비교 할 필요가 없다.
                 else if(person[i][0] < person[j][0] && person[i][1] < person[j][1]) {      // 몸무게와 키가 모두 큰 사람의 값이 들어온다면
                    rank++;                                                                 // rank를 올려준다. (1 → 2 → 3... 순으로 1등이 바뀌는 것)
                }
            }
            System.out.print(rank+" ");           // 최종 rank를 출력함 (마지막에 공백을 넣지 않아 계속 틀리고있었음 --;)
        }
    }
}
